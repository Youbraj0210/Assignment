// <auto-generated />
using System;
using FoodDeliveryApp_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodDeliveryApp_API.Migrations
{
    [DbContext(typeof(FoodAppDBContext))]
    [Migration("20250816155801_UpdateOrder2")]
    partial class UpdateOrder2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodDeliveryApp_API.Models.Cuisine", b =>
                {
                    b.Property<int>("CuisineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CuisineId"));

                    b.Property<int>("CuisineType")
                        .HasColumnType("int");

                    b.HasKey("CuisineId");

                    b.ToTable("Cuisines");

                    b.HasData(
                        new
                        {
                            CuisineId = 1,
                            CuisineType = 0
                        },
                        new
                        {
                            CuisineId = 2,
                            CuisineType = 1
                        },
                        new
                        {
                            CuisineId = 3,
                            CuisineType = 2
                        },
                        new
                        {
                            CuisineId = 4,
                            CuisineType = 3
                        },
                        new
                        {
                            CuisineId = 5,
                            CuisineType = 4
                        },
                        new
                        {
                            CuisineId = 6,
                            CuisineType = 5
                        },
                        new
                        {
                            CuisineId = 7,
                            CuisineType = 9
                        },
                        new
                        {
                            CuisineId = 8,
                            CuisineType = 7
                        },
                        new
                        {
                            CuisineId = 9,
                            CuisineType = 8
                        },
                        new
                        {
                            CuisineId = 10,
                            CuisineType = 9
                        },
                        new
                        {
                            CuisineId = 11,
                            CuisineType = 10
                        },
                        new
                        {
                            CuisineId = 12,
                            CuisineType = 11
                        },
                        new
                        {
                            CuisineId = 13,
                            CuisineType = 12
                        });
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<int?>("DeliveryPartnerId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceId");

                    b.HasIndex("DeliveryPartnerId");

                    b.HasIndex("OrderId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"));

                    b.Property<int?>("CuisineId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("MenuItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MenuItemPrice")
                        .HasColumnType("float");

                    b.HasKey("MenuItemId");

                    b.HasIndex("CuisineId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("OrderTotalPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int?>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("unitPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderItemId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Role = 0
                        },
                        new
                        {
                            RoleId = 2,
                            Role = 1
                        },
                        new
                        {
                            RoleId = 3,
                            Role = 2
                        });
                });

            modelBuilder.Entity("MenuMenuItem", b =>
                {
                    b.Property<int>("ItemsMenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("MenusMenuId")
                        .HasColumnType("int");

                    b.HasKey("ItemsMenuItemId", "MenusMenuId");

                    b.HasIndex("MenusMenuId");

                    b.ToTable("MenuMenuItem");
                });

            modelBuilder.Entity("OrderOrderItem", b =>
                {
                    b.Property<int>("ItemsOrderItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrdersOrderId")
                        .HasColumnType("int");

                    b.HasKey("ItemsOrderItemId", "OrdersOrderId");

                    b.HasIndex("OrdersOrderId");

                    b.ToTable("OrderOrderItem");
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.Customer", b =>
                {
                    b.HasBaseType("FoodDeliveryApp_API.Models.User");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Customer");
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.DeliveryPartner", b =>
                {
                    b.HasBaseType("FoodDeliveryApp_API.Models.User");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("DeliveryPartner");
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.Invoice", b =>
                {
                    b.HasOne("FoodDeliveryApp_API.Models.DeliveryPartner", "DeliveryPartner")
                        .WithMany("Invoices")
                        .HasForeignKey("DeliveryPartnerId");

                    b.HasOne("FoodDeliveryApp_API.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.Navigation("DeliveryPartner");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.MenuItem", b =>
                {
                    b.HasOne("FoodDeliveryApp_API.Models.Cuisine", "Cuisine")
                        .WithMany("MenuItems")
                        .HasForeignKey("CuisineId");

                    b.Navigation("Cuisine");
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.Order", b =>
                {
                    b.HasOne("FoodDeliveryApp_API.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.OrderItem", b =>
                {
                    b.HasOne("FoodDeliveryApp_API.Models.MenuItem", "MenuItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("MenuItemId");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.User", b =>
                {
                    b.HasOne("FoodDeliveryApp_API.Models.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("MenuMenuItem", b =>
                {
                    b.HasOne("FoodDeliveryApp_API.Models.MenuItem", null)
                        .WithMany()
                        .HasForeignKey("ItemsMenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodDeliveryApp_API.Models.Menu", null)
                        .WithMany()
                        .HasForeignKey("MenusMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrderOrderItem", b =>
                {
                    b.HasOne("FoodDeliveryApp_API.Models.OrderItem", null)
                        .WithMany()
                        .HasForeignKey("ItemsOrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodDeliveryApp_API.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.Cuisine", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.MenuItem", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FoodDeliveryApp_API.Models.DeliveryPartner", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
